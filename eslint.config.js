// ESLint Flat Config (v9+)
// 游꿢 Analogia: Este 칠 o "Manual de Boas Pr치ticas" da f치brica
// Define as regras que todo c칩digo deve seguir

import js from '@eslint/js';
import globals from 'globals';

export default [
  // Configura칞칚o recomendada do ESLint como base
  js.configs.recommended,

  {
    // 游깴 Define o ambiente: browser + ES2024
    languageOptions: {
      ecmaVersion: 2024,
      sourceType: 'module',
      globals: {
        ...globals.browser,
        ...globals.node,
        ...globals.es2024,
      },
    },

    // 游늺 Regras customizadas para qualidade de c칩digo
    rules: {
      // 丘멆잺 Warnings - Coisas que devemos evitar
      'no-console': 'warn', // Avisar sobre console.log (ok em dev, remov칤vel em prod)

      // 游뚿 Errors - Coisas que N츾O podem passar
      'no-unused-vars': [
        'error',
        {
          argsIgnorePattern: '^_', // Permite _parametro para par칙metros n칚o usados
          varsIgnorePattern: '^_', // Permite _variavel para vari치veis intencionalmente n칚o usadas
        },
      ],
      'prefer-const': 'error', // Use const quando n칚o reatribuir
      'no-var': 'error', // Nunca use var, sempre let/const
      eqeqeq: ['error', 'always'], // Sempre use === e !== (nunca == ou !=)
      curly: ['error', 'all'], // Sempre use chaves em if/for/while
      semi: ['error', 'always'], // Sempre use ponto e v칤rgula
      quotes: ['error', 'single'], // Sempre use aspas simples
      'arrow-spacing': 'error', // Espa칞o em arrow functions: () => {}
      'no-duplicate-imports': 'error', // N칚o importar do mesmo arquivo 2x
      'prefer-template': 'error', // Use template literals em vez de concatena칞칚o
      'no-useless-return': 'error', // Evitar return desnecess치rio
      'no-else-return': 'error', // Se tem return no if, n칚o precisa else
      'object-shorthand': 'error', // Use shorthand: { name } em vez de { name: name }
      'prefer-destructuring': [
        'error',
        {
          array: false,
          object: true,
        },
      ],
    },
  },

  // 游뛂 Arquivos e pastas que o ESLint deve ignorar
  {
    ignores: [
      'dist/**', // Build output
      'node_modules/**', // Depend칡ncias
      'coverage/**', // Relat칩rios de testes
      'playwright-report/**', // Relat칩rios E2E
      'test-results/**', // Resultados de testes
      '*.config.js', // Arquivos de config (este pr칩prio arquivo)
    ],
  },
];
